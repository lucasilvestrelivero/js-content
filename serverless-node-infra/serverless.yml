service: serveless-node-infra
frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  profile: app
  timeout: 10 # optional, in seconds, default is 6
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:UpdateItem
          Resource:
            - !GetAtt ProductsTable.Arn
  environment:
    STAGE: ${self:provider.stage}
    # DEBUG: ${env:DEBUG}

package:
  individually: true

custom:
  esbuild:
    target: node20
    bundle: true
    minify: true
    sourcemap: false
    exclude:
      - '@aws-sdk/*'
    # define:
    #   require.resolve: undefined
    platform: node
    # concurrency: 10
  serverless-dynamodb:
    stages:
      - dev
    start:
      docker: true
      port: 8000
      shareDB: true
      migrate: true
      convertEmptyValues: true
      noStart: true

functions:
  listProducts:
    handler: src/functions/dynamoDB/listProducts.handler
    events:
      - httpApi:
          path: /products
          method: GET
  getProduct:
    handler: src/functions/dynamoDB/getProduct.handler
    events:
      - httpApi:
          path: /products/{productId}
          method: GET
  createProduct:
    handler: src/functions/dynamoDB/createProduct.handler
    events:
      - httpApi:
          path: /products
          method: POST
  updateProduct:
    handler: src/functions/dynamoDB/updateProduct.handler
    events:
      - httpApi:
          path: /products/{productId}
          method: PUT
  deleteProduct:
    handler: src/functions/dynamoDB/deleteProduct.handler
    events:
      - httpApi:
          path: /products/{productId}
          method: DELETE

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ProductsTable
        BillingMode: PAY_PER_REQUEST
        # PointInTimeRecoverySpecification:
        # PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
